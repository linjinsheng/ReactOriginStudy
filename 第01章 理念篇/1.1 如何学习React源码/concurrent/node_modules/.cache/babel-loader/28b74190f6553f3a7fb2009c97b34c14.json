{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nvar VictoryAccessibleGroup = /*#__PURE__*/function (_React$Component) {\n  _inherits(VictoryAccessibleGroup, _React$Component);\n\n  function VictoryAccessibleGroup() {\n    _classCallCheck(this, VictoryAccessibleGroup);\n\n    return _possibleConstructorReturn(this, (VictoryAccessibleGroup.__proto__ || Object.getPrototypeOf(VictoryAccessibleGroup)).apply(this, arguments));\n  }\n\n  _createClass(VictoryAccessibleGroup, [{\n    key: \"render\",\n    value: function render() {\n      var _props = this.props,\n          desc = _props.desc,\n          children = _props.children,\n          className = _props.className,\n          tabIndex = _props.tabIndex;\n      var descId = desc && (this.props[\"aria-describedby\"] || desc.split(\" \").join(\"-\"));\n      return desc ? React.createElement(\"g\", {\n        \"aria-label\": this.props[\"aria-label\"],\n        \"aria-describedby\": descId,\n        className: className,\n        tabIndex: tabIndex\n      }, React.createElement(\"desc\", {\n        id: descId\n      }, desc), children) : React.createElement(\"g\", {\n        \"aria-label\": this.props[\"aria-label\"],\n        \"aria-describedby\": this.props[\"aria-describedby\"],\n        className: className,\n        tabIndex: tabIndex\n      }, children);\n    }\n  }]);\n\n  return VictoryAccessibleGroup;\n}(React.Component);\n\nObject.defineProperty(VictoryAccessibleGroup, \"displayName\", {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  value: \"VictoryAccessibleGroup\"\n});\nObject.defineProperty(VictoryAccessibleGroup, \"propTypes\", {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  value: {\n    \"aria-describedby\": PropTypes.string,\n    \"aria-label\": PropTypes.string,\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n    className: PropTypes.string,\n    desc: PropTypes.string,\n    tabIndex: PropTypes.number\n  }\n});\nObject.defineProperty(VictoryAccessibleGroup, \"defaultProps\", {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  value: {\n    className: \"VictoryAccessibleGroup\"\n  }\n});\nexport default VictoryAccessibleGroup;","map":null,"metadata":{},"sourceType":"module"}