{"ast":null,"code":"import _some from \"lodash/some\";\nimport _defaults from \"lodash/defaults\";\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nimport React from \"react\";\nimport * as Collection from \"../collection\";\nimport * as Transitions from \"../transitions\";\nvar INITIAL_STATE = {\n  nodesShouldLoad: false,\n  nodesDoneLoad: false,\n  animating: true\n};\nexport var useAnimationState = function useAnimationState() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n\n  var _React$useState = React.useState(initialState),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      _setState = _React$useState2[1]; // This allows us to use a state object and maintain the same API as this.setState\n\n\n  var setState = React.useCallback(function (newState) {\n    _setState(function (oldState) {\n      return _objectSpread({}, oldState, newState);\n    });\n  }, [_setState]); // This is a copy of Wrapper.getAnimationProps\n\n  var getAnimationProps = React.useCallback(function (props, child, index) {\n    if (!props.animate) {\n      return child.props.animate;\n    }\n\n    var getFilteredState = function getFilteredState() {\n      var childrenTransitions = state && state.childrenTransitions;\n      childrenTransitions = Collection.isArrayOfArrays(childrenTransitions) ? childrenTransitions[index] : childrenTransitions;\n      return _defaults({\n        childrenTransitions: childrenTransitions\n      }, state);\n    };\n\n    var getTransitions = props.animate && props.animate.getTransitions;\n    var filteredState = getFilteredState();\n    var parentState = props.animate && props.animate.parentState || filteredState;\n\n    if (!getTransitions) {\n      var getTransitionProps = Transitions.getTransitionPropsFactory(props, filteredState, function (newState) {\n        return setState(newState);\n      });\n\n      getTransitions = function getTransitions(childComponent) {\n        return getTransitionProps(childComponent, index);\n      };\n    }\n\n    return _defaults({\n      getTransitions: getTransitions,\n      parentState: parentState\n    }, props.animate, child.props.animate);\n  }, [state, setState]); // This is a copy of Wrapper.setAnimationState\n\n  var setAnimationState = React.useCallback(function (props, nextProps) {\n    if (!props.animate) {\n      return;\n    }\n\n    if (props.animate.parentState) {\n      var nodesWillExit = props.animate.parentState.nodesWillExit;\n      var oldProps = nodesWillExit ? props : null;\n\n      var newState = _defaults({\n        oldProps: oldProps,\n        nextProps: nextProps\n      }, props.animate.parentState);\n\n      setState(newState);\n    } else {\n      var oldChildren = React.Children.toArray(props.children);\n      var nextChildren = React.Children.toArray(nextProps.children);\n\n      var isContinuous = function isContinuous(child) {\n        var check = function check(c) {\n          return c.type && c.type.continuous;\n        };\n\n        return Array.isArray(child) ? _some(child, check) : check(child);\n      };\n\n      var continuous = !props.polar && _some(oldChildren, function (child) {\n        return isContinuous(child) || child.props.children && isContinuous(child.props.children);\n      });\n\n      var _Transitions$getIniti = Transitions.getInitialTransitionState(oldChildren, nextChildren),\n          _nodesWillExit = _Transitions$getIniti.nodesWillExit,\n          nodesWillEnter = _Transitions$getIniti.nodesWillEnter,\n          childrenTransitions = _Transitions$getIniti.childrenTransitions,\n          nodesShouldEnter = _Transitions$getIniti.nodesShouldEnter;\n\n      setState({\n        nodesWillExit: _nodesWillExit,\n        nodesWillEnter: nodesWillEnter,\n        nodesShouldEnter: nodesShouldEnter,\n        childrenTransitions: Collection.isArrayOfArrays(childrenTransitions) ? childrenTransitions[0] : childrenTransitions,\n        oldProps: _nodesWillExit ? props : null,\n        nextProps: nextProps,\n        continuous: continuous\n      });\n    }\n  }, [setState]);\n  var getProps = React.useCallback(function (initialProps) {\n    return state && state.nodesWillExit ? state.oldProps || initialProps : initialProps;\n  }, [state]);\n  return {\n    state: state,\n    setState: setState,\n    getAnimationProps: getAnimationProps,\n    setAnimationState: setAnimationState,\n    getProps: getProps\n  };\n};","map":null,"metadata":{},"sourceType":"module"}