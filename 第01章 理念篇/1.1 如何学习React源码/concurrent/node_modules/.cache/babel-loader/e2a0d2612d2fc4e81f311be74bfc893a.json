{"ast":null,"code":"import React from \"react\";\nimport { CanvasContext } from \"./hooks/use-canvas-context\";\nimport PropTypes from \"prop-types\";\nimport { PropTypes as CustomPropTypes } from \"victory-core\";\n\nvar CanvasGroup = function CanvasGroup(props) {\n  var canvasRef = React.useRef();\n  var children = props.children,\n      width = props.width,\n      height = props.height,\n      clipWidth = props.clipWidth,\n      padding = props.padding;\n  var clear = React.useCallback(function (ctx) {\n    return ctx.clearRect(0, 0, width, height);\n  }, [width, height]); // This needs to be called in the child component to ensure it is called after the\n  // shape is drawn\n\n  var clip = React.useCallback(function (ctx) {\n    var maxClipWidth = width - padding.right - padding.left;\n    ctx.clearRect(width - padding.right, 0, (maxClipWidth - clipWidth) * -1, height);\n  }, [width, height, padding, clipWidth]);\n  return React.createElement(CanvasContext.Provider, {\n    value: {\n      canvasRef: canvasRef,\n      clear: clear,\n      clip: clip\n    }\n  }, React.createElement(\"foreignObject\", {\n    width: width,\n    height: height,\n    x: 0,\n    y: 0\n  }, React.createElement(\"canvas\", {\n    width: width,\n    height: height,\n    ref: canvasRef\n  })), children);\n};\n\nCanvasGroup.propTypes = {\n  \"aria-label\": PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  className: PropTypes.string,\n  clipWidth: CustomPropTypes.nonNegative,\n  height: PropTypes.number,\n  padding: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    top: PropTypes.number,\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number\n  })]),\n  width: PropTypes.number\n};\nCanvasGroup.role = \"container\";\nCanvasGroup.displayName = \"CanvasGroup\";\nexport default CanvasGroup;","map":null,"metadata":{},"sourceType":"module"}